generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String  @id @default(cuid())
  email          String  @unique
  hashedPassword String
  companyName    String?
  companyBranch  String?
  itManager      String?
  address        String?
  image          String?
  role           Role    @default(USER)

  tickets          Ticket[]
  proformaInvoices PorformaInvoice[]
  invoices         Invoice[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Invoice {
  id                 String @id @default(cuid())
  invoiceNumber      String @unique
  organization       String
  description        String
  organizationBranch String
  assignedToUserId   String
  issuerId           String
  // image String

  User User @relation(fields: [assignedToUserId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PorformaInvoice {
  id                    String   @id @default(cuid())
  porformaInvoiceNumber String   @unique
  organization          String
  description           String
  organizationBranch    String
  assignedToUserId      String
  issuerId              String
  status                Status   @default(IN_PROGRESS)
  expiredAt             DateTime
  // image String

  User User @relation(fields: [assignedToUserId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Status {
  IN_PROGRESS
  EXPIRED
}

model Ticket {
  id            String         @id @default(cuid())
  subject       String
  title         String         @db.VarChar(255)
  ticketMessage TicketMessage?
  status        TicketStatus   @default(OPEN)
  issuerId      String

  User User @relation(fields: [issuerId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TicketMessage {
  id                String      @id @default(cuid())
  message           String      @db.Text
  assignetoTicketId String      @unique
  messageType       MessageType
  issuerId          String

  Ticket Ticket @relation(fields: [assignetoTicketId], references: [id])

  createdAt DateTime @default(now())
}

enum MessageType {
  REQUEST
  RESPONCE
}

enum TicketStatus {
  OPEN
  INVESTIGATING
  CLOSED
}
