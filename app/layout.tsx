import prisma from "@/prisma/client";
import type { Metadata } from "next";
import localFont from "next/font/local";
import AllProviders from "./AllProviders";
import Navbar from "./components/Navbar";
import Sidebar from "./components/Sidebar";
import "./globals.css";
import getSession from "./libs/getSession";

const iranYekan_bold = localFont({
  src: "./fonts/IRANYekanBold.ttf",
  variable: "--font-iran-yekan-bold",
});
const iranYekan_regular = localFont({
  src: "./fonts/IRANYekanRegular.ttf",
  variable: "--font-iran-yekan-regular",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await getSession();

  const [allNotifications, unReadNotificationCount, authenticatedUser] =
    await Promise.all([
      prisma.notification.findMany({
        where: {
          AND: [
            { isRead: false },
            { users: { some: { id: session?.user.id } } },
          ],
        },

        orderBy: { createdAt: "desc" },
        take: 5,
      }),

      // unReadNotificationCount
      prisma.notification.count({
        where: {
          AND: [
            { isRead: false },
            { users: { some: { id: session?.user.id } } },
          ],
        },
      }),

      // authenticatedUser
      session?.user
        ? prisma.user.findUnique({ where: { id: session?.user.id } })
        : undefined,
    ]);

  // Delete expired porforma invoice notifications
  await prisma.notification.deleteMany({
    where: { porformaInvoice: { status: "EXPIRED" } },
  });

  return (
    <html
      suppressHydrationWarning
      lang="fa"
      dir="rtl"
      className="light:bg-neutral-50"
    >
      <body
        className={`${iranYekan_bold.variable} ${iranYekan_regular.variable} antialiased relative `}
      >
        <AllProviders>
          <div>
            <Sidebar session={session!} />
          </div>

          <main className={`flex flex-col ${session && "mr-[66px]"} h-full`}>
            <nav className="w-full">
              <Navbar
                session={session!}
                authenticatedUser={authenticatedUser!}
                unReadNotificationCount={unReadNotificationCount}
                notifications={allNotifications}
              />
            </nav>

            {children}
          </main>
        </AllProviders>
      </body>
    </html>
  );
}
